
m32test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000017c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000017c  00000210  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080006a  0080006a  0000021a  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000054  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000093c  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e7       	ldi	r30, 0x7C	; 124
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 36       	cpi	r26, 0x6B	; 107
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 af 00 	call	0x15e	; 0x15e <main>
  8a:	0c 94 bc 00 	jmp	0x178	; 0x178 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <USART_Init>:
  92:	59 98       	cbi	0x0b, 1	; 11
  94:	83 e3       	ldi	r24, 0x33	; 51
  96:	89 b9       	out	0x09, r24	; 9
  98:	10 bc       	out	0x20, r1	; 32
  9a:	80 b5       	in	r24, 0x20	; 32
  9c:	8f 7b       	andi	r24, 0xBF	; 191
  9e:	80 bd       	out	0x20, r24	; 32
  a0:	8a b1       	in	r24, 0x0a	; 10
  a2:	88 61       	ori	r24, 0x18	; 24
  a4:	8a b9       	out	0x0a, r24	; 10
  a6:	57 9a       	sbi	0x0a, 7	; 10
  a8:	08 95       	ret

000000aa <uartSend>:
  aa:	5d 9b       	sbis	0x0b, 5	; 11
  ac:	fe cf       	rjmp	.-4      	; 0xaa <uartSend>
  ae:	8c b9       	out	0x0c, r24	; 12
  b0:	08 95       	ret

000000b2 <strSend>:
  b2:	1f 93       	push	r17
  b4:	cf 93       	push	r28
  b6:	df 93       	push	r29
  b8:	ec 01       	movw	r28, r24
  ba:	10 e0       	ldi	r17, 0x00	; 0
  bc:	fe 01       	movw	r30, r28
  be:	e1 0f       	add	r30, r17
  c0:	f1 1d       	adc	r31, r1
  c2:	80 81       	ld	r24, Z
  c4:	88 23       	and	r24, r24
  c6:	21 f0       	breq	.+8      	; 0xd0 <strSend+0x1e>
  c8:	0e 94 55 00 	call	0xaa	; 0xaa <uartSend>
  cc:	1f 5f       	subi	r17, 0xFF	; 255
  ce:	f6 cf       	rjmp	.-20     	; 0xbc <strSend+0xa>
  d0:	8d e0       	ldi	r24, 0x0D	; 13
  d2:	0e 94 55 00 	call	0xaa	; 0xaa <uartSend>
  d6:	8a e0       	ldi	r24, 0x0A	; 10
  d8:	df 91       	pop	r29
  da:	cf 91       	pop	r28
  dc:	1f 91       	pop	r17
  de:	0c 94 55 00 	jmp	0xaa	; 0xaa <uartSend>

000000e2 <__vector_1>:
  e2:	1f 92       	push	r1
  e4:	0f 92       	push	r0
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	0f 92       	push	r0
  ea:	11 24       	eor	r1, r1
  ec:	2f 93       	push	r18
  ee:	3f 93       	push	r19
  f0:	4f 93       	push	r20
  f2:	5f 93       	push	r21
  f4:	6f 93       	push	r22
  f6:	7f 93       	push	r23
  f8:	8f 93       	push	r24
  fa:	9f 93       	push	r25
  fc:	af 93       	push	r26
  fe:	bf 93       	push	r27
 100:	ef 93       	push	r30
 102:	ff 93       	push	r31
 104:	10 92 6a 00 	sts	0x006A, r1
 108:	80 91 60 00 	lds	r24, 0x0060
 10c:	90 91 61 00 	lds	r25, 0x0061
 110:	20 91 6a 00 	lds	r18, 0x006A
 114:	fc 01       	movw	r30, r24
 116:	e2 0f       	add	r30, r18
 118:	f1 1d       	adc	r31, r1
 11a:	20 81       	ld	r18, Z
 11c:	22 23       	and	r18, r18
 11e:	71 f0       	breq	.+28     	; 0x13c <__vector_1+0x5a>
 120:	20 91 6a 00 	lds	r18, 0x006A
 124:	fc 01       	movw	r30, r24
 126:	e2 0f       	add	r30, r18
 128:	f1 1d       	adc	r31, r1
 12a:	80 81       	ld	r24, Z
 12c:	0e 94 55 00 	call	0xaa	; 0xaa <uartSend>
 130:	80 91 6a 00 	lds	r24, 0x006A
 134:	8f 5f       	subi	r24, 0xFF	; 255
 136:	80 93 6a 00 	sts	0x006A, r24
 13a:	e6 cf       	rjmp	.-52     	; 0x108 <__vector_1+0x26>
 13c:	ff 91       	pop	r31
 13e:	ef 91       	pop	r30
 140:	bf 91       	pop	r27
 142:	af 91       	pop	r26
 144:	9f 91       	pop	r25
 146:	8f 91       	pop	r24
 148:	7f 91       	pop	r23
 14a:	6f 91       	pop	r22
 14c:	5f 91       	pop	r21
 14e:	4f 91       	pop	r20
 150:	3f 91       	pop	r19
 152:	2f 91       	pop	r18
 154:	0f 90       	pop	r0
 156:	0f be       	out	0x3f, r0	; 63
 158:	0f 90       	pop	r0
 15a:	1f 90       	pop	r1
 15c:	18 95       	reti

0000015e <main>:
 15e:	8a 98       	cbi	0x11, 2	; 17
 160:	92 9a       	sbi	0x12, 2	; 18
 162:	f8 94       	cli
 164:	8b b7       	in	r24, 0x3b	; 59
 166:	80 64       	ori	r24, 0x40	; 64
 168:	8b bf       	out	0x3b, r24	; 59
 16a:	85 b7       	in	r24, 0x35	; 53
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	85 bf       	out	0x35, r24	; 53
 170:	0e 94 49 00 	call	0x92	; 0x92 <USART_Init>
 174:	78 94       	sei
 176:	ff cf       	rjmp	.-2      	; 0x176 <main+0x18>

00000178 <_exit>:
 178:	f8 94       	cli

0000017a <__stop_program>:
 17a:	ff cf       	rjmp	.-2      	; 0x17a <__stop_program>
